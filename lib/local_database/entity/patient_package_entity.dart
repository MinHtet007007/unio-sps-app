import 'package:floor/floor.dart';
import 'package:sps/local_database/tables/local_database_tables.dart';
import 'package:sps/models/patient_package.dart';
import 'package:json_annotation/json_annotation.dart';
part 'patient_package_entity.g.dart';

@JsonSerializable()
@Entity(tableName: LocalDataBase.patient_package_table)
class PatientPackageEntity {
  @PrimaryKey(autoGenerate: true)
  final int? id;
  final int? remoteId;
  final int localPatientId;
  final int? remotePatientId;
  final String packageName;
  final int eligibleAmount;
  final int? updatedEligibleAmount;
  int remainingAmount;

  PatientPackageEntity({
    this.id,
    this.remoteId,
    required this.localPatientId,
    this.remotePatientId,
    required this.packageName,
    required this.eligibleAmount,
    this.updatedEligibleAmount,
    required this.remainingAmount,
  });

  factory PatientPackageEntity.mapRemotePatientPackageToLocalEntity(
      PatientPackage remotePatientPackage, int localPatientId) {
    return PatientPackageEntity(
      id: null, // Auto-generated by the database
      remoteId: remotePatientPackage.id,
      localPatientId: localPatientId,
      remotePatientId: remotePatientPackage.patientId,
      packageName: remotePatientPackage.packageName,
      eligibleAmount: remotePatientPackage.eligibleAmount,
      updatedEligibleAmount: remotePatientPackage.updatedEligibleAmount,
      remainingAmount: remotePatientPackage.remainingAmount,
    );
  }
  factory PatientPackageEntity.fromJson(Map<String, dynamic> json) =>
      _$PatientPackageEntityFromJson(json);

  Map<String, dynamic> toJson() => {
        'id': id,
        'remote_id': remoteId,
        'local_patient_id': localPatientId,
        'remote_patient_id': remotePatientId,
        'package_name': packageName,
        'eligible_amount': eligibleAmount,
        'updated_eligible_amount': updatedEligibleAmount,
        'remaining_amount': remainingAmount,
      };
}
